onLoadMission 			= "On Load Mission";
onLoadIntro   			= "On Load Intro";
onLoadMissionTime 		= 1;
onLoadIntroTime 		= 1;
loadScreen 				= "loading.paa";
onLoadName    			= "On Load Name";
author        			= "Author";

// Picture in mission select
//overviewPicture		= ".paa";
// Text in mission select
//overviewText			= "";
// Text in mission select when locked
//overviewTextLocked 	= "";

showCompass				= 1;
showGPS					= 1;
showMap					= 1;
showNotePad				= 1;
showWatch				= 1;
showUAVFeed				= 1;
enableItemsDropping		= 1;
saving					= 0;
// Advanced Flight Model
forceRotorLibSimulation = 0;

disableRandomization[] 	= {"All", "AllVehicles"};
debriefing				= 1;
/*
	0 = Global
	1 = Side
	2 = Command
	3 = Group
	4 = Vehicle
	5 = Direct
	6 = System
*/
disableChannels[]		= {};
disabledAI				= 1;
aiKills					= 0;
joinUnassigned 			= 0;

/*
	0 = Default behavior, available only in editor
	1 = Available in SP and for hosts / logged in admins
	2 = Available for everyone
*/
enableDebugConsole 		= 2;
allowFunctionsLog		= 1;

// Respawn
respawn       			= 3;
respawnDelay  			= 30;
respawnDialog 			= 0;
respawnOnStart 			= 1;
//	1	Respawn on start. Run respawn script on start.
//	0	Dont respawn on start. Run respawn script on start.
//	-1	Dont respawn on start. Don't run respawn script on start.
respawnTemplates[] 		= {"Instant"};

// Revive
// The time it takes to revive an incapacitated unit (default: 6 seconds). Having a Medikit will halve this time. Must have "Revive" Respawn template enabled.
//reviveDelay = 6;
// The time it takes for an incapacitated unit to force their respawn (default: 3 seconds). Must have "Revive" Respawn template enabled.
//reviveForceRespawnDelay = 3;
// The time it takes for a unit to bleed out (default: 2 minutes). Must have "Revive" Respawn template enabled.
//reviveBleedOutDelay = 120;

/*
	0 = None - None of the units are managed by the manager
	1 = All - All units are managed by the manager
	2 = None_But_Respawned - Only units that can respawn are managed by the manager
	3 = All_But_Respawned - All units are managed by the manager with exception of respawned (opposite to mode 2)

*/
corpseManagerMode		= 0;
/*
	Corpse limit before which 
	( <= ) corpseRemovalMaxTime applies and after which 
	( > ) corpseRemovalMinTime applies (see below).
*/
corpseLimit 			= 100;
/*
	Remove all bodies that have been dead longer than corpseRemovalMinTime when corpseLimit is breached.
*/
corpseRemovalMinTime 	= 300;
/*
	Maximum time a corpse can remain on the ground if total number of corpses is equal or under corpseLimit.
*/
corpseRemovalMaxTime 	= 1200;

/*
	0 = None - None of the vehicles are managed by the manager
	1 = All - All vehicles are managed by the manager
	2 = None_But_Respawned - Only vehicles that can respawn are managed by the manager
	3 = All_But_Respawned - All vehicles are managed by the manager with exception of respawned (opposite to mode 2)
*/
wreckManagerMode 		= 0;
/*
	Vehicle wreck limit before which ( <= ) wreckRemovalMaxTime applies and after which ( > ) wreckRemovalMinTime applies (see below).
*/
wreckLimit 				= 1;
/*
	Remove all wrecks that have existed longer than wreckRemovalMinTime when wreckLimit is breached.
*/
wreckRemovalMinTime		= 600;
/*
	Maximum time a wreck can remain on the ground if total number of wrecks is equal or under wreckLimit.
*/
wreckRemovalMaxTime		= 1800;



/*
onPauseScript = "myOnPauseScript.sqf";
onPauseScript[] = {myOnPauseFunction1,myOnPauseFunction2};//(Arma 3)
// In its own namespace, need to use missionNamespace with set/get variable, ect
*/

// Define PMC Custom GPS Skin
onMinimapScript[] = {"BIS_fnc_customGPS_Spawn"};

class Header {
	gameType =  RPG; 
	minPlayers = 1; 
	maxPlayers = 100;
};

// CfgCameraEffects
class cfgSounds {
	sounds[] = {};
	#include "sounds.h"
};
class CfgFunctions {
	class A_functions {
		#include "fnc/functions.h"
	}
};
// cfgRadio
// cfgMusic
// cfgIdentities
// 
// CfgRemoteExecCommands
// CfgUnitInsignia
// cfgDebriefing
// cfgDebriefingSections
// rscTitles
// CfgVehicleTemplates
// cfgRemoteExec

#include "Awesome\Dialogs\Essentials\RscDefines.hpp"
#include "Awesome\Dialogs\Essentials\DialogColorConstants.hpp"
#include "Awesome\Dialogs\Essentials\DialogColorScheme.hpp"
#include "Awesome\Dialogs\Essentials\DialogControlClasses.hpp"
//#include "Awesome\Dialogs\Essentials\Arma3.hpp"
#include "RscTitles.hpp"

#include "Awesome\Dialogs\Custom_Dialogs.hpp"

#include "Awesome\Retributions\retributions.hpp"
#include "Awesome\MyStats\loading.hpp"


#include "Awesome\Functions\dikcodes.h"


#include "gfx.hpp"
#include "INVdialogs.hpp"
#include "4782911.hpp"
#include "4461230.hpp"
#include "maindialogs.hpp"

#include "Awesome\Functions\weapon_modifications.hpp"
#include "Awesome\Functions\list_menu.hpp"
#include "Awesome\Functions\main_menu.hpp"
#include "Awesome\Functions\admin_menu.hpp"
#include "Awesome\Functions\camera_menu.hpp"
#include "Awesome\Functions\shop_menu.hpp"
#include "Awesome\Functions\factory_menu.hpp"
#include "Awesome\Functions\bank_menu.hpp"
#include "Awesome\Functions\inventory_menu.hpp"
#include "Awesome\Functions\storage_menu.hpp"
#include "Awesome\Functions\free_camera.hpp"
#include "Awesome\Functions\lotto_menu.hpp"
#include "Awesome\Functions\animations_menu.hpp"
#include "Awesome\Functions\prison_menu.hpp"
#include "Awesome\Functions\legislation_menu.hpp"
#include "Awesome\Functions\economy_menu.hpp"
#include "Awesome\Functions\list_simple_menu.hpp"
#include "Awesome\Functions\arrest_menu.hpp"
#include "Awesome\Functions\ticket_menu.hpp"
#include "Awesome\Functions\yes_no_menu.hpp"
#include "Awesome\Functions\voting_menu.hpp"
#include "Awesome\Functions\mobile_menu.hpp"